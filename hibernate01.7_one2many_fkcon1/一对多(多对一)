inverse的值有两种，“true”和“false”。
inverse="false"是默认的值,如果设置为true 则表示对象的状态变化不会同步到数据库 ;设置成false则相反;
          我们说inverse设立不当会导致性能低下，其实是说inverse设立不当，会产生多余重复的SQL语句甚至致使JDBC exception的
throw。
          这是我们在建立实体类关系时必须需要关注的地方。一般来说，inverse=true是推荐使用，双向关联中双方都设置 
 inverse=false的话， 必会导致双方都重复更新同一个关系。但是如果双方都设立inverse=true的话，双方都不维护关系的更新，
 这也是不行的，好在一对多中的一端:many-to-one默认是inverse=false，避免了这种错误的产生。
但是多对多就没有这个默认设置了，所以很多人经常在多对多的两端都使用inverse=true，结果导致连接表的数据根本没有记录，
就是因为他们双方都没有责任维护关系。所以说，双向关联中最好的设置是一端为inverse=true，一端为inverse=false。
一般inverse=false会放在多的一端，那么有人提问了， many－to－many两边都是多的，inverse到底放在哪儿？
其实hibernate建立多对多关系也是将他们分离成两个一对多关系，中间连接一个连接表。所以通用存在一对多的关系，
也可以这样说：一对多是多对多的基本组成部分。


一般情况下使用多对一  即在多的一方持有一的引用即可
如果需要更改成一对多 /多对一双向关联时       在set里就要将inverse=true ,防止双方都重复更新同一个关系，将控制权转移到多的
一端   多的一端默认设置false    即在多的一端添加数据就能保持表的关系    例如添加学生时就同时为学生添加班级    这时添加班级
再为班级中添加所有学生就不能实现了    学生中将失去与班级的关联